// define a variable to import the <Verifier> solidity contract generated by Zokrates
var SquareVerifier = artifacts.require('SquareVerifier');

// - use the contents from proof.json generated from zokrates steps
const proof = require('../../zokrates/code/square/proof.json')['proof'];
const inputs = require('../../zokrates/code/square/proof.json')['inputs'];

contract('SquareVerifier', accounts => {

    const account_one = accounts[0];

    beforeEach(async function () {
        this.contract = await SquareVerifier.new({from: account_one});
    })

    // Test verification with correct proof
    it('verification with correct proof works', async function () {
        let ok = await this.contract.verifyTx.call(proof.a, proof.b, proof.c, inputs);
        assert.equal(ok, true, 'verification with correct proof should pass');
    })

    // Test verification with incorrect proof
    it('verification with incorrect proof fails', async function () {
        // swapped a and c
        let ok = await this.contract.verifyTx.call(proof.c, proof.b, proof.a, inputs);
        assert.equal(ok, false, 'verification with incorrect proof should not pass');
    })

})
